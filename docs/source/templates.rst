.. Generated by extract_template_comments.py

*********
Templates
*********

alert.html
==========

Create an alert.

**enable_close** (bool) Make it possible to close the alert.

**label** (str) Optional. Introduces the message.

**message** (str) The message to be displayed.

**status** (str) The nature of the alert: ``info``, ``success``, ``warning``, or ``error``. Defaults to ``error``.

Example:

.. code::

    {% include "htmgel/alert.html" with label="Snap!" message="Something has gone horribly wrong." %}


breadcrumbs.html
================

Display breadcrumb navigation.

**breadcrumbs** (iterable) A list of breadcrumb objects. The object must provide a ``title`` attribute and implement
``get_absolute_url()``.

**include_home** (bool) Indicates whether a home link should be added automatically.

**label** (str) Optional label for the navigation. May not be used by all frameworks.

Example:

.. code::

    {% include "htmgel/breadcrumbs.html" with breadcrumbs=objects include_home=True %}


carousel.html
=============

Display a carousel of content.

**display_caption** (bool) Determines whether the caption (title) is displayed.

**images** (iterable) An iterable of images. Each object must implement a ``title`` and ``get_absolute_url``.

**selector** (str) Required. This is the name used to uniquely identify the carousel in the DOM.

Example:

.. code::

    {% include "htmgel/carousel.html" display_caption=True images=objects selector="promotions" %}


crud.html
=========

Display the appropriate CRUD label.

**value** (str) The value of CRUD: create, retrieve, update, delete.

Example:

.. code::

    {% include "htmgel/crud.html" with value="create" %}


form.html
=========

A generic means for display most types of forms.

**action** (str) The URL to where the form will be sent.

**enable_close** (bool) Make it possible to close the alert.

**form** (instance) The form instance must be in the context for passed specifically to the template.

**form_class** (str) ``horizontal`` (default) or ``inline``.

**method** (str) ``get`` or ``post`` (default).

**multipart** (bool) ``True`` or ``False`` (default).

Example:

.. code::

    {% include "htmgel/form.html" %}


form_field.html
===============

Display a form field.

**field** (instance) The field instance must be in the context for passed specifically to the template.

Example:

.. code::

    {% include "htmgel/form_field.html" %}

.. note::
    This requires that ``htmgel_tags`` be enabled in order to identify the widget. Also note that this template is
    rarely used directly. See ``form.html``.


list_group.html
===============

Display a list group.

**active_id** (int) When using links, you may pass the ID of the active object. This will be compared to the
object's pk field.

**enable_links** (bool) Set to ``True`` to use display the objects as links.

**objects** (iterable) An iterable of objects to be displayed. The object must provide attributes for ``title``
and ``get_absolute_url``.

Example:

.. code::

    {% include "htmgel/list_group.html" with projects=objects%}


media_object.html
=================

Display a media object.

**object** (instance) The object to be displayed. The object must implement the methods or properties listed below.

Object properties:

- description: Truncated to 40 characters.
- get_absolute_url()
- thumbnail: The URL of the thumbnail to display.
- title: A title for the object.

Example:

.. code::

    {% include "htmgel/media_object.html" with object=todo %}


menu_items.html
===============

Create a navigation menu.

**active_page** (str) The name of the active page.

**menu_items** (iterable) A list or tuple containing an iterable in the form of ``[title, url, name, permissions]``.

Example:

.. code::

    {% include "htmgel/menu_items.html" with active_page="home" %}


messages.html
=============

A wrapper around ``alert.html`` that deals with multiple messages at once.

**enable_close** (bool) Make it possible to close the alert.

**messages** (iterable) The messages to be displayed.

Example:

.. code::

    {% include "htmgel/messages.html" %}


page_header.html
================

Create a page header.

**subtitle** (str) Optional subtitle.

**title** (str) Page title.

Example:

.. code::

    {% include "htmgel/page_header.html" with title="Home" subtitle="Welcome" %}


pagination.html
===============

Create list pagination.

**objects** (Paginator) A Django pagination object.

Example:

.. code::

    {% include "htmgel/pagination.html" with objects=projects %}


progress_bar.html
=================

Create a progress bar.

**value** (int) The percentage complete.

**status** (str) The nature of the alert: ``info``, ``success``, ``warning``, or ``error``. Defaults to ``info``.
:type status: str

**is_labeled** (bool) Set to ``True`` to cause the percentage to be displayed.

Example:

.. code::

    {% include "htmgel/progress_bar.html" with is_labeled=True status="warning" value=25 %}


search_form.html
================

Display a form for searching.

**navbar** (bool) Indicates the form is to be displayed along side navigation.

**url** (str) Optional. The submit url. Defaults to ``/search/``.

**search_query** (str) The keywords used in the search, if any.

Example:

.. code::

    {% include "htmgel/search_form.html" with navbar=True %}


table.html
==========

Use this template as a generic means of creating a table/grid.

**table** (instance) An instance representing the table. See ``htmgel.utils.Table``.

Example:

.. code::

    {% include "htmgel/table.html" %}


thumbnail.html
==============

Display a thumbnail.

**height** (int) The max height in pixels. Defaults to 273.

**object** (instance) The object to be displayed. The object must implement the methods or properties below.

The object is expected to implement the following:

- description: Truncated to 40 characters.
- get_absolute_url()
- thumbnail: The URL of the thumbnail to display.
- title: The title of the object.

**width** (int) The max width in pixels. Defaults to 200.

Example:

.. code::

    {% include "htmgel/thumbnail.html" with object=todo %}

